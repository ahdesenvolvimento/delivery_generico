# Generated by Django 3.0.5 on 2020-09-12 16:23

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=25, unique=True, verbose_name='Telefone')),
                ('controle_pedido', models.BooleanField(default=False, verbose_name='Pedido finalizado?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Membro da equipe')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', core.models.BaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='Adicionais',
            fields=[
                ('cod_adicional', models.AutoField(primary_key=True, serialize=False, verbose_name='Código do adicional')),
                ('nome', models.CharField(max_length=20, verbose_name='Nome do adicional')),
                ('valor', models.FloatField(verbose_name='Valor em R$')),
                ('ativo', models.BooleanField(default=True, null=True, verbose_name='Ativo')),
            ],
        ),
        migrations.CreateModel(
            name='AdicionalProduto',
            fields=[
                ('cod_adicional_prod', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('cod_adic', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Adicionais')),
            ],
        ),
        migrations.CreateModel(
            name='Bairro',
            fields=[
                ('cod_bairro', models.AutoField(primary_key=True, serialize=False, verbose_name='Código do bairro')),
                ('nome', models.CharField(max_length=30, verbose_name='Nome do bairro')),
                ('taxa', models.FloatField(verbose_name='Taxa de entrega')),
            ],
            options={
                'verbose_name': 'Bairro',
                'verbose_name_plural': 'Bairros',
            },
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('cod_endereco', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('numero_casa', models.IntegerField(verbose_name='Número')),
                ('cep', models.CharField(max_length=50, verbose_name='CEP')),
                ('complemento', models.CharField(max_length=100, verbose_name='Complemento')),
                ('ponto', models.CharField(default=None, max_length=50, verbose_name='Ponto de referência')),
                ('bairro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Bairro')),
                ('cod_cliente', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EnderecoCliente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod_cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('cod_endereco', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Endereco')),
            ],
        ),
        migrations.CreateModel(
            name='FormaPagamento',
            fields=[
                ('cod_forma', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('forma', models.CharField(max_length=75, unique=True, verbose_name='Forma de pagamento')),
                ('ativo', models.BooleanField(default=False, null=True, verbose_name='Ativo')),
                ('troco', models.FloatField(blank=True, null=True, verbose_name='Troco')),
            ],
            options={
                'verbose_name': 'Forma de pagamento',
                'verbose_name_plural': 'Formas de pagamento',
            },
        ),
        migrations.CreateModel(
            name='Horario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.CharField(choices=[('1', 'Segunda'), ('2', 'Terça'), ('3', 'Quarta'), ('4', 'Quinta'), ('5', 'Sexta'), ('6', 'Sábado'), ('7', 'Domingo')], max_length=20, verbose_name='Dia')),
                ('hora_abrir', models.TimeField(verbose_name='Horário de abrir')),
                ('hora_fechar', models.TimeField(verbose_name='Horário de fechar')),
            ],
        ),
        migrations.CreateModel(
            name='MotoBoy',
            fields=[
                ('cod_moto', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo')),
                ('nome', models.CharField(max_length=15, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=False, null=True, verbose_name='Ativo')),
            ],
        ),
        migrations.CreateModel(
            name='Tipo',
            fields=[
                ('cod_tipo', models.AutoField(primary_key=True, serialize=False, verbose_name='Código do tipo do produto')),
                ('tipo', models.CharField(max_length=50, verbose_name='Tipo')),
                ('ativo', models.BooleanField(default=False, null=True, verbose_name='Ativo')),
            ],
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('cod_prod', models.AutoField(primary_key=True, serialize=False, verbose_name='Código do produto')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome do produto')),
                ('ingredientes', models.CharField(max_length=50, verbose_name='Ingredientes')),
                ('descricao', models.TextField(max_length=120, verbose_name='Descrição do produto')),
                ('valor', models.FloatField(verbose_name='Preço')),
                ('imagem', stdimage.models.StdImageField(upload_to='produtos', verbose_name='Imagem')),
                ('ativo', models.BooleanField(default=True, null=True, verbose_name='Ativo')),
                ('cod_tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Tipo')),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
            },
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('criacao', models.DateTimeField(auto_now_add=True, verbose_name='Criação')),
                ('modificacao', models.DateField(auto_now=True, verbose_name='Modificação')),
                ('cod_pedido', models.AutoField(primary_key=True, serialize=False, verbose_name='Código do pedido')),
                ('status', models.CharField(default='Não finalizado', max_length=70, verbose_name='Status do pedido')),
                ('total', models.FloatField(verbose_name='Total em R$')),
                ('tipo_de_entrega', models.CharField(choices=[('1', 'Delivery'), ('2', 'Retirada'), ('3', 'Consumir no local')], max_length=50, verbose_name='Tipo de entrega')),
                ('cod_endereco', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.EnderecoCliente')),
                ('cod_forma', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.FormaPagamento')),
                ('cod_motoboy', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.MotoBoy')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Carrinho',
            fields=[
                ('criacao', models.DateTimeField(auto_now_add=True, verbose_name='Criação')),
                ('modificacao', models.DateField(auto_now=True, verbose_name='Modificação')),
                ('cod', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('observacao', models.TextField(blank=True, default='Sem observações', max_length=75, null=True, verbose_name='Observação')),
                ('quantidade', models.IntegerField(verbose_name='Quantidade')),
                ('total', models.FloatField(default=None, null=True, verbose_name='Total')),
                ('cod_cliente', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('cod_pedido', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Pedido')),
                ('cod_prod_adicional', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.AdicionalProduto')),
            ],
            options={
                'verbose_name': 'Carrinho',
                'verbose_name_plural': 'Carrinhos',
            },
        ),
        migrations.AddField(
            model_name='adicionalproduto',
            name='cod_prod',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Produto'),
        ),
    ]
